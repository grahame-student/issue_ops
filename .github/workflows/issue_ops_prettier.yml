---
name: Run Prettier

on:
  issue_comment:
    types: [created]

permissions:
  checks: read # required for checking if the CI checks have passed on a pull request (if using this Action in the context of PR comments)
  contents: write # issue github/command#49 shows that this permission is also needed. Allow changes to be pushed back to the branch.
  issues: write # required for adding reactions to command comments on issues
  pull-requests: write # required for adding reactions to command comments on PRs
  statuses: read

jobs:
  issue-ops-run-prettier:
    if: (startsWith(github.event.comment.body, '/prettier'))
    name: Analyse PR comments for commands
    runs-on: ubuntu-latest
    steps:
      - uses: github/command@v2.0.0
        id: prettier-command
        with:
          command: "/prettier"
          reaction: eyes
          success_reaction: "rocket" # <-- NEW: adds a ðŸš€ only if your command succeeds
          failure_reaction: "-1" # <-- NEW: adds a ðŸ‘Ž  if your command fails
          allowlist: grahame-student
          skip_ci: true
          allowed_contexts: "pull_request"

      - name: Checkout PR branch
        if: ${{ steps.prettier-command.outputs.continue == 'true' }}
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ steps.prettier-command.outputs.ref }}

      - name: Process prettier command
        if: ${{ steps.prettier-command.outputs.continue == 'true' }}
        shell: bash
        env:
          CMD_PARAMS: ${{ steps.prettier-command.outputs.params }}
        run: |
          echo "/prettier command detected"
          echo "params: $CMD_PARAMS"

          # Ensure that some arguments have been provided
          if [ -z "$CMD_PARAMS" ]; then
            echo "No arguments provided:"
            echo "use '/prettier | pr' to format only the files in the PR"
            echo "use '/prettier | all' to format all files in the repository"
            exit 1
          fi

          # Create an array of arguments and determine how many have been passed in
          IFS=' ' read -r -a PARAMS <<< "$CMD_PARAMS"
          PARAM_COUNT=${#PARAMS[@]}

          # Ensure that only 1 argument has been provided
          if [ "$PARAM_COUNT" -ne 1 ]; then
            echo "Too many arguments provided:"
            echo "use '/prettier | pr' to format only the files in the PR"
            echo "use '/prettier | all' to format all files in the repository"
            exit 1
          fi
          
          if [ "${PARAMS[0]}" = "all" ]; then
            echo "formatting all files in repo"
            npx prettier --write --end-of-line=auto **.*
          elif [ "${PARAMS[0]}" = "all" ]; then
            echo "formatting only PR files"
            echo "TODO"
          else
            echo "Unknown argument provided:"
            echo "use '/prettier | pr' to format only the files in the PR"
            echo "use '/prettier | all' to format all files in the repository"
          fi

      - name: Push changes back to PR branch
        run: |
          git status
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git add .
          git commit -m "chore: prettier formatting"
          git push
